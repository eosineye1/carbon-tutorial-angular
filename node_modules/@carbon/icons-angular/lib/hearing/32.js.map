{"version":3,"file":"32.js","sourceRoot":"","sources":["../../ts/hearing/32.ts"],"names":[],"mappings":"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","sourcesContent":["\nimport {\n  NgModule,\n  Component,\n  Directive,\n  ElementRef,\n  Input,\n  AfterViewInit\n} from \"@angular/core\";\nimport { getAttributes } from \"@carbon/icon-helpers\";\n\n@Component({\n\tselector: \"ibm-icon-hearing32\",\n  template: `\n    <svg\n      ibmIconHearing32\n      [ariaLabel]=\"ariaLabel\"\n      [ariaLabelledby]=\"ariaLabelledby\"\n      [ariaHidden]=\"ariaHidden\"\n      [title]=\"title\"\n      [isFocusable]=\"focusable\"\n      [attr.class]=\"innerClass\">\n    </svg>\n  `\n})\nexport class Hearing32 {\n  @Input() ariaLabel: string;\n  @Input() ariaLabelledby: string;\n  @Input() ariaHidden: boolean;\n  @Input() title: string;\n  @Input() focusable: boolean = false;\n  @Input() innerClass: string;\n}\n\n@Directive({\n  selector: \"[ibmIconHearing32]\"\n})\nexport class Hearing32Directive implements AfterViewInit {\n  static titleIdCounter = 0;\n\n  @Input() ariaLabel: string;\n  @Input() ariaLabelledby: string;\n  @Input() ariaHidden: boolean;\n  @Input() title: string;\n  @Input() isFocusable: boolean = false;\n\n  constructor(protected elementRef: ElementRef) {}\n\n\tngAfterViewInit() {\n    const svg = this.elementRef.nativeElement;\n    svg.setAttribute(\"xmlns\", \"http://www.w3.org/2000/svg\");\n\n    const domParser = new DOMParser();\n    const rawSVG = `<svg focusable=\"false\" preserveAspectRatio=\"xMidYMid meet\" style=\"will-change: transform;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"32\" height=\"32\" viewBox=\"0 0 32 32\" aria-hidden=\"true\"><path d=\"M18 30v-2a10.011 10.011 0 0 0 10-10h2a12.013 12.013 0 0 1-12 12z\"></path><path d=\"M18 26v-2a6.007 6.007 0 0 0 6-6h2a8.01 8.01 0 0 1-8 8z\"></path><path d=\"M18 22v-2a2.002 2.002 0 0 0 2-2h2a4.004 4.004 0 0 1-4 4zM10 2a9.01 9.01 0 0 0-9 9h2a7 7 0 0 1 14 0 7.09 7.09 0 0 1-3.501 6.135l-.499.288v3.073a2.935 2.935 0 0 1-.9 2.151 4.182 4.182 0 0 1-4.633 1.03A4.092 4.092 0 0 1 5 20H3a6.116 6.116 0 0 0 3.67 5.512 5.782 5.782 0 0 0 2.314.486 6.585 6.585 0 0 0 4.478-1.888A4.94 4.94 0 0 0 15 20.496v-1.942A9.108 9.108 0 0 0 19 11a9.01 9.01 0 0 0-9-9z\"></path><path d=\"M9.28 8.082A3.006 3.006 0 0 1 13 11h2a4.979 4.979 0 0 0-1.884-3.911 5.041 5.041 0 0 0-4.281-.957 4.95 4.95 0 0 0-3.703 3.703 5.032 5.032 0 0 0 2.304 5.458A3.078 3.078 0 0 1 9 17.924V20h2v-2.077a5.06 5.06 0 0 0-2.537-4.346 3.002 3.002 0 0 1 .817-5.495z\"></path></svg>`;\n    const svgElement = domParser.parseFromString(rawSVG, \"image/svg+xml\").documentElement;\n\n    let node = svgElement.firstChild;\n    while (node) {\n      // importNode makes a clone of the node\n      // this ensures we keep looping over the nodes in the parsed document\n      svg.appendChild(svg.ownerDocument.importNode(node, true));\n      node = node.nextSibling;\n    }\n\n    const attributes = getAttributes({\n      width: 32,\n      height: 32,\n      viewBox: \"0 0 32 32\",\n      title: this.title,\n      \"aria-label\": this.ariaLabel,\n      \"aria-labelledby\": this.ariaLabelledby,\n      \"aria-hidden\": this.ariaHidden,\n      focusable: this.isFocusable.toString()\n    });\n\n    const attrKeys = Object.keys(attributes);\n    for (let i = 0; i < attrKeys.length; i++) {\n      const key = attrKeys[i];\n      const value = attributes[key];\n      if (key === \"title\") {\n        continue;\n      }\n      if (value) {\n        svg.setAttribute(key, value);\n      }\n    }\n\n    if (attributes.title) {\n      const title = document.createElement(\"title\");\n      title.textContent = attributes.title;\n      Hearing32Directive.titleIdCounter++;\n      title.setAttribute(\"id\", `hearing32-${Hearing32Directive.titleIdCounter}`);\n      svg.appendChild(title);\n      svg.setAttribute(\"aria-labelledby\", `hearing32-${Hearing32Directive.titleIdCounter}`);\n    }\n\t}\n}\n\n@NgModule({\n  declarations: [\n    Hearing32,\n    Hearing32Directive\n  ],\n  exports: [\n    Hearing32,\n    Hearing32Directive\n  ]\n})\nexport class Hearing32Module {}\n"]}
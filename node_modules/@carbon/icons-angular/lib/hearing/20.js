import { NgModule, Component, Directive, ElementRef, Input } from "@angular/core";
import { getAttributes } from "@carbon/icon-helpers";
var Hearing20 = /** @class */ (function () {
    function Hearing20() {
        this.focusable = false;
    }
    Hearing20.decorators = [
        { type: Component, args: [{
                    selector: "ibm-icon-hearing20",
                    template: "\n    <svg\n      ibmIconHearing20\n      [ariaLabel]=\"ariaLabel\"\n      [ariaLabelledby]=\"ariaLabelledby\"\n      [ariaHidden]=\"ariaHidden\"\n      [title]=\"title\"\n      [isFocusable]=\"focusable\"\n      [attr.class]=\"innerClass\">\n    </svg>\n  "
                },] },
    ];
    Hearing20.propDecorators = {
        ariaLabel: [{ type: Input }],
        ariaLabelledby: [{ type: Input }],
        ariaHidden: [{ type: Input }],
        title: [{ type: Input }],
        focusable: [{ type: Input }],
        innerClass: [{ type: Input }]
    };
    return Hearing20;
}());
export { Hearing20 };
var Hearing20Directive = /** @class */ (function () {
    function Hearing20Directive(elementRef) {
        this.elementRef = elementRef;
        this.isFocusable = false;
    }
    Hearing20Directive.prototype.ngAfterViewInit = function () {
        var svg = this.elementRef.nativeElement;
        svg.setAttribute("xmlns", "http://www.w3.org/2000/svg");
        var domParser = new DOMParser();
        var rawSVG = "<svg focusable=\"false\" preserveAspectRatio=\"xMidYMid meet\" style=\"will-change: transform;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 32 32\" aria-hidden=\"true\"><path d=\"M18 30v-2a10.011 10.011 0 0 0 10-10h2a12.013 12.013 0 0 1-12 12z\"></path><path d=\"M18 26v-2a6.007 6.007 0 0 0 6-6h2a8.01 8.01 0 0 1-8 8z\"></path><path d=\"M18 22v-2a2.002 2.002 0 0 0 2-2h2a4.004 4.004 0 0 1-4 4zM10 2a9.01 9.01 0 0 0-9 9h2a7 7 0 0 1 14 0 7.09 7.09 0 0 1-3.501 6.135l-.499.288v3.073a2.935 2.935 0 0 1-.9 2.151 4.182 4.182 0 0 1-4.633 1.03A4.092 4.092 0 0 1 5 20H3a6.116 6.116 0 0 0 3.67 5.512 5.782 5.782 0 0 0 2.314.486 6.585 6.585 0 0 0 4.478-1.888A4.94 4.94 0 0 0 15 20.496v-1.942A9.108 9.108 0 0 0 19 11a9.01 9.01 0 0 0-9-9z\"></path><path d=\"M9.28 8.082A3.006 3.006 0 0 1 13 11h2a4.979 4.979 0 0 0-1.884-3.911 5.041 5.041 0 0 0-4.281-.957 4.95 4.95 0 0 0-3.703 3.703 5.032 5.032 0 0 0 2.304 5.458A3.078 3.078 0 0 1 9 17.924V20h2v-2.077a5.06 5.06 0 0 0-2.537-4.346 3.002 3.002 0 0 1 .817-5.495z\"></path></svg>";
        var svgElement = domParser.parseFromString(rawSVG, "image/svg+xml").documentElement;
        var node = svgElement.firstChild;
        while (node) {
            // importNode makes a clone of the node
            // this ensures we keep looping over the nodes in the parsed document
            svg.appendChild(svg.ownerDocument.importNode(node, true));
            node = node.nextSibling;
        }
        var attributes = getAttributes({
            width: 20,
            height: 20,
            viewBox: "0 0 32 32",
            title: this.title,
            "aria-label": this.ariaLabel,
            "aria-labelledby": this.ariaLabelledby,
            "aria-hidden": this.ariaHidden,
            focusable: this.isFocusable.toString()
        });
        var attrKeys = Object.keys(attributes);
        for (var i = 0; i < attrKeys.length; i++) {
            var key = attrKeys[i];
            var value = attributes[key];
            if (key === "title") {
                continue;
            }
            if (value) {
                svg.setAttribute(key, value);
            }
        }
        if (attributes.title) {
            var title = document.createElement("title");
            title.textContent = attributes.title;
            Hearing20Directive.titleIdCounter++;
            title.setAttribute("id", "hearing20-" + Hearing20Directive.titleIdCounter);
            svg.appendChild(title);
            svg.setAttribute("aria-labelledby", "hearing20-" + Hearing20Directive.titleIdCounter);
        }
    };
    Hearing20Directive.titleIdCounter = 0;
    Hearing20Directive.decorators = [
        { type: Directive, args: [{
                    selector: "[ibmIconHearing20]"
                },] },
    ];
    /** @nocollapse */
    Hearing20Directive.ctorParameters = function () { return [
        { type: ElementRef }
    ]; };
    Hearing20Directive.propDecorators = {
        ariaLabel: [{ type: Input }],
        ariaLabelledby: [{ type: Input }],
        ariaHidden: [{ type: Input }],
        title: [{ type: Input }],
        isFocusable: [{ type: Input }]
    };
    return Hearing20Directive;
}());
export { Hearing20Directive };
var Hearing20Module = /** @class */ (function () {
    function Hearing20Module() {
    }
    Hearing20Module.decorators = [
        { type: NgModule, args: [{
                    declarations: [
                        Hearing20,
                        Hearing20Directive
                    ],
                    exports: [
                        Hearing20,
                        Hearing20Directive
                    ]
                },] },
    ];
    return Hearing20Module;
}());
export { Hearing20Module };
//# sourceMappingURL=20.js.map
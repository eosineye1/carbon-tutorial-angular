import { NgModule, Component, Directive, ElementRef, Input } from "@angular/core";
import { getAttributes } from "@carbon/icon-helpers";
var WatsonMachineLearning20 = /** @class */ (function () {
    function WatsonMachineLearning20() {
        this.focusable = false;
    }
    WatsonMachineLearning20.decorators = [
        { type: Component, args: [{
                    selector: "ibm-icon-watson-machine-learning20",
                    template: "\n    <svg\n      ibmIconWatsonMachineLearning20\n      [ariaLabel]=\"ariaLabel\"\n      [ariaLabelledby]=\"ariaLabelledby\"\n      [ariaHidden]=\"ariaHidden\"\n      [title]=\"title\"\n      [isFocusable]=\"focusable\"\n      [attr.class]=\"innerClass\">\n    </svg>\n  "
                },] },
    ];
    WatsonMachineLearning20.propDecorators = {
        ariaLabel: [{ type: Input }],
        ariaLabelledby: [{ type: Input }],
        ariaHidden: [{ type: Input }],
        title: [{ type: Input }],
        focusable: [{ type: Input }],
        innerClass: [{ type: Input }]
    };
    return WatsonMachineLearning20;
}());
export { WatsonMachineLearning20 };
var WatsonMachineLearning20Directive = /** @class */ (function () {
    function WatsonMachineLearning20Directive(elementRef) {
        this.elementRef = elementRef;
        this.isFocusable = false;
    }
    WatsonMachineLearning20Directive.prototype.ngAfterViewInit = function () {
        var svg = this.elementRef.nativeElement;
        svg.setAttribute("xmlns", "http://www.w3.org/2000/svg");
        var domParser = new DOMParser();
        var rawSVG = "<svg focusable=\"false\" preserveAspectRatio=\"xMidYMid meet\" style=\"will-change: transform;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 32 32\" aria-hidden=\"true\"><path d=\"M22 26h-2v-8.24l-3.23 3.88a1 1 0 0 1-1.54 0L12 17.76V26h-2V15a1 1 0 0 1 .66-.94 1 1 0 0 1 1.11.3L16 19.44l4.23-5.08a1 1 0 0 1 1.11-.3A1 1 0 0 1 22 15zM4.16 14.65l-3-1.75a.76.76 0 1 0-.76 1.32l3 1.78a.76.76 0 1 0 .76-1.31zm4.13-4.13a.73.73 0 0 0 1 .27.75.75 0 0 0 .28-1l-1.74-3a.76.76 0 1 0-1.32.76zM16 9a.76.76 0 0 0 .76-.76V4.76a.76.76 0 1 0-1.52 0v3.49A.76.76 0 0 0 16 9zm6.68 1.79a.75.75 0 0 0 .37.11.76.76 0 0 0 .66-.38l1.75-3a.76.76 0 0 0-1.32-.76l-1.74 3a.75.75 0 0 0 .28 1.03zm9.22 2.39a.76.76 0 0 0-1-.28l-3 1.75a.76.76 0 0 0 .7 1.35l3-1.74a.77.77 0 0 0 .3-1.08z\"></path></svg>";
        var svgElement = domParser.parseFromString(rawSVG, "image/svg+xml").documentElement;
        var node = svgElement.firstChild;
        while (node) {
            // importNode makes a clone of the node
            // this ensures we keep looping over the nodes in the parsed document
            svg.appendChild(svg.ownerDocument.importNode(node, true));
            node = node.nextSibling;
        }
        var attributes = getAttributes({
            width: 20,
            height: 20,
            viewBox: "0 0 32 32",
            title: this.title,
            "aria-label": this.ariaLabel,
            "aria-labelledby": this.ariaLabelledby,
            "aria-hidden": this.ariaHidden,
            focusable: this.isFocusable.toString()
        });
        var attrKeys = Object.keys(attributes);
        for (var i = 0; i < attrKeys.length; i++) {
            var key = attrKeys[i];
            var value = attributes[key];
            if (key === "title") {
                continue;
            }
            if (value) {
                svg.setAttribute(key, value);
            }
        }
        if (attributes.title) {
            var title = document.createElement("title");
            title.textContent = attributes.title;
            WatsonMachineLearning20Directive.titleIdCounter++;
            title.setAttribute("id", "watson-machine-learning20-" + WatsonMachineLearning20Directive.titleIdCounter);
            svg.appendChild(title);
            svg.setAttribute("aria-labelledby", "watson-machine-learning20-" + WatsonMachineLearning20Directive.titleIdCounter);
        }
    };
    WatsonMachineLearning20Directive.titleIdCounter = 0;
    WatsonMachineLearning20Directive.decorators = [
        { type: Directive, args: [{
                    selector: "[ibmIconWatsonMachineLearning20]"
                },] },
    ];
    /** @nocollapse */
    WatsonMachineLearning20Directive.ctorParameters = function () { return [
        { type: ElementRef }
    ]; };
    WatsonMachineLearning20Directive.propDecorators = {
        ariaLabel: [{ type: Input }],
        ariaLabelledby: [{ type: Input }],
        ariaHidden: [{ type: Input }],
        title: [{ type: Input }],
        isFocusable: [{ type: Input }]
    };
    return WatsonMachineLearning20Directive;
}());
export { WatsonMachineLearning20Directive };
var WatsonMachineLearning20Module = /** @class */ (function () {
    function WatsonMachineLearning20Module() {
    }
    WatsonMachineLearning20Module.decorators = [
        { type: NgModule, args: [{
                    declarations: [
                        WatsonMachineLearning20,
                        WatsonMachineLearning20Directive
                    ],
                    exports: [
                        WatsonMachineLearning20,
                        WatsonMachineLearning20Directive
                    ]
                },] },
    ];
    return WatsonMachineLearning20Module;
}());
export { WatsonMachineLearning20Module };
//# sourceMappingURL=20.js.map
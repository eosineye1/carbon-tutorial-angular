import { NgModule, Component, Directive, ElementRef, Input } from "@angular/core";
import { getAttributes } from "@carbon/icon-helpers";
var LogoSnapchat32 = /** @class */ (function () {
    function LogoSnapchat32() {
        this.focusable = false;
    }
    LogoSnapchat32.decorators = [
        { type: Component, args: [{
                    selector: "ibm-icon-logo-snapchat32",
                    template: "\n    <svg\n      ibmIconLogoSnapchat32\n      [ariaLabel]=\"ariaLabel\"\n      [ariaLabelledby]=\"ariaLabelledby\"\n      [ariaHidden]=\"ariaHidden\"\n      [title]=\"title\"\n      [isFocusable]=\"focusable\"\n      [attr.class]=\"innerClass\">\n    </svg>\n  "
                },] },
    ];
    LogoSnapchat32.propDecorators = {
        ariaLabel: [{ type: Input }],
        ariaLabelledby: [{ type: Input }],
        ariaHidden: [{ type: Input }],
        title: [{ type: Input }],
        focusable: [{ type: Input }],
        innerClass: [{ type: Input }]
    };
    return LogoSnapchat32;
}());
export { LogoSnapchat32 };
var LogoSnapchat32Directive = /** @class */ (function () {
    function LogoSnapchat32Directive(elementRef) {
        this.elementRef = elementRef;
        this.isFocusable = false;
    }
    LogoSnapchat32Directive.prototype.ngAfterViewInit = function () {
        var svg = this.elementRef.nativeElement;
        svg.setAttribute("xmlns", "http://www.w3.org/2000/svg");
        var domParser = new DOMParser();
        var rawSVG = "<svg focusable=\"false\" preserveAspectRatio=\"xMidYMid meet\" style=\"will-change: transform;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"32\" height=\"32\" viewBox=\"0 0 32 32\" aria-hidden=\"true\"><path d=\"M30 8.56a8.44 8.44 0 0 0-.13-1.5 6.13 6.13 0 0 0-.57-1.74 6.13 6.13 0 0 0-1.2-1.56 5.88 5.88 0 0 0-2.54-1.45A10.66 10.66 0 0 0 22.87 2H9.13c-.51 0-1 0-1.54.07a7.73 7.73 0 0 0-1.65.37A5.89 5.89 0 0 0 3.76 3.9 5.78 5.78 0 0 0 2.3 6.45 10 10 0 0 0 2 9.12v13.77a16.2 16.2 0 0 0 .13 1.86 6.46 6.46 0 0 0 .57 1.89 6 6 0 0 0 1.68 2 5.45 5.45 0 0 0 1.69.92 9 9 0 0 0 2.77.4h14.57a9.59 9.59 0 0 0 1.68-.18 5.74 5.74 0 0 0 2.81-1.36 5.85 5.85 0 0 0 1.86-3.1 11.25 11.25 0 0 0 .24-2.43V8.56zm-3.75 13c-.18.42-1.08.77-2.61 1-.15 0-.21.26-.29.64a4.05 4.05 0 0 1-.12.47.28.28 0 0 1-.3.23 2.15 2.15 0 0 1-.44-.06 5.3 5.3 0 0 0-2-.05 3.94 3.94 0 0 0-1.57.81 4.56 4.56 0 0 1-2.76 1.08h-.26a4.56 4.56 0 0 1-2.76-1.08 4 4 0 0 0-1.58-.81 5.92 5.92 0 0 0-.82-.07 6 6 0 0 0-1.15.13 2.07 2.07 0 0 1-.44.06.3.3 0 0 1-.33-.23 4.15 4.15 0 0 1-.11-.48c-.09-.38-.15-.61-.29-.63-1.53-.24-2.44-.59-2.62-1a.31.31 0 0 1 0-.13.24.24 0 0 1 .2-.26 5.35 5.35 0 0 0 3.22-1.91 7.37 7.37 0 0 0 1.1-1.71 1.08 1.08 0 0 0 .11-.92c-.2-.47-.85-.67-1.29-.81l-.29-.1c-.38-.15-1-.47-.93-.91a.85.85 0 0 1 .84-.55.66.66 0 0 1 .25 0 2.58 2.58 0 0 0 1 .28.89.89 0 0 0 .6-.19v-.61a10.24 10.24 0 0 1 .19-4.15 5.38 5.38 0 0 1 5-3.22h.41a5.38 5.38 0 0 1 5 3.22 10.61 10.61 0 0 1 .25 4.14v.61a.82.82 0 0 0 .54.18 2.55 2.55 0 0 0 1-.27.84.84 0 0 1 .32-.06.9.9 0 0 1 .37.07.68.68 0 0 1 .51.56c0 .21-.16.53-.94.84l-.29.1c-.43.14-1.09.34-1.28.81a1.11 1.11 0 0 0 .1.92c.05.13 1.37 3.13 4.31 3.62a.26.26 0 0 1 .21.26.65.65 0 0 1-.09.14z\"></path></svg>";
        var svgElement = domParser.parseFromString(rawSVG, "image/svg+xml").documentElement;
        var node = svgElement.firstChild;
        while (node) {
            // importNode makes a clone of the node
            // this ensures we keep looping over the nodes in the parsed document
            svg.appendChild(svg.ownerDocument.importNode(node, true));
            node = node.nextSibling;
        }
        var attributes = getAttributes({
            width: 32,
            height: 32,
            viewBox: "0 0 32 32",
            title: this.title,
            "aria-label": this.ariaLabel,
            "aria-labelledby": this.ariaLabelledby,
            "aria-hidden": this.ariaHidden,
            focusable: this.isFocusable.toString()
        });
        var attrKeys = Object.keys(attributes);
        for (var i = 0; i < attrKeys.length; i++) {
            var key = attrKeys[i];
            var value = attributes[key];
            if (key === "title") {
                continue;
            }
            if (value) {
                svg.setAttribute(key, value);
            }
        }
        if (attributes.title) {
            var title = document.createElement("title");
            title.textContent = attributes.title;
            LogoSnapchat32Directive.titleIdCounter++;
            title.setAttribute("id", "logo-snapchat32-" + LogoSnapchat32Directive.titleIdCounter);
            svg.appendChild(title);
            svg.setAttribute("aria-labelledby", "logo-snapchat32-" + LogoSnapchat32Directive.titleIdCounter);
        }
    };
    LogoSnapchat32Directive.titleIdCounter = 0;
    LogoSnapchat32Directive.decorators = [
        { type: Directive, args: [{
                    selector: "[ibmIconLogoSnapchat32]"
                },] },
    ];
    /** @nocollapse */
    LogoSnapchat32Directive.ctorParameters = function () { return [
        { type: ElementRef }
    ]; };
    LogoSnapchat32Directive.propDecorators = {
        ariaLabel: [{ type: Input }],
        ariaLabelledby: [{ type: Input }],
        ariaHidden: [{ type: Input }],
        title: [{ type: Input }],
        isFocusable: [{ type: Input }]
    };
    return LogoSnapchat32Directive;
}());
export { LogoSnapchat32Directive };
var LogoSnapchat32Module = /** @class */ (function () {
    function LogoSnapchat32Module() {
    }
    LogoSnapchat32Module.decorators = [
        { type: NgModule, args: [{
                    declarations: [
                        LogoSnapchat32,
                        LogoSnapchat32Directive
                    ],
                    exports: [
                        LogoSnapchat32,
                        LogoSnapchat32Directive
                    ]
                },] },
    ];
    return LogoSnapchat32Module;
}());
export { LogoSnapchat32Module };
//# sourceMappingURL=32.js.map
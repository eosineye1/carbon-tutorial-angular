import { NgModule, Component, Directive, ElementRef, Input } from "@angular/core";
import { getAttributes } from "@carbon/icon-helpers";
var Migrate24 = /** @class */ (function () {
    function Migrate24() {
        this.focusable = false;
    }
    Migrate24.decorators = [
        { type: Component, args: [{
                    selector: "ibm-icon-migrate24",
                    template: "\n    <svg\n      ibmIconMigrate24\n      [ariaLabel]=\"ariaLabel\"\n      [ariaLabelledby]=\"ariaLabelledby\"\n      [ariaHidden]=\"ariaHidden\"\n      [title]=\"title\"\n      [isFocusable]=\"focusable\"\n      [attr.class]=\"innerClass\">\n    </svg>\n  "
                },] },
    ];
    Migrate24.propDecorators = {
        ariaLabel: [{ type: Input }],
        ariaLabelledby: [{ type: Input }],
        ariaHidden: [{ type: Input }],
        title: [{ type: Input }],
        focusable: [{ type: Input }],
        innerClass: [{ type: Input }]
    };
    return Migrate24;
}());
export { Migrate24 };
var Migrate24Directive = /** @class */ (function () {
    function Migrate24Directive(elementRef) {
        this.elementRef = elementRef;
        this.isFocusable = false;
    }
    Migrate24Directive.prototype.ngAfterViewInit = function () {
        var svg = this.elementRef.nativeElement;
        svg.setAttribute("xmlns", "http://www.w3.org/2000/svg");
        var domParser = new DOMParser();
        var rawSVG = "<svg focusable=\"false\" preserveAspectRatio=\"xMidYMid meet\" style=\"will-change: transform;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 32 32\" aria-hidden=\"true\"><path d=\"M26 2H6a2 2 0 0 0-2 2v4a2 2 0 0 0 2 2h9v6.17l-2.59-2.58L11 15l5 5 5-5-1.41-1.41L17 16.17V10h9a2 2 0 0 0 2-2V4a2 2 0 0 0-2-2zM6 4h4v4H6zm20 4H12V4h14zm0 14H6a2 2 0 0 0-2 2v4a2 2 0 0 0 2 2h20a2 2 0 0 0 2-2v-4a2 2 0 0 0-2-2zM6 24h14v4H6zm20 4h-4v-4h4z\"></path></svg>";
        var svgElement = domParser.parseFromString(rawSVG, "image/svg+xml").documentElement;
        var node = svgElement.firstChild;
        while (node) {
            // importNode makes a clone of the node
            // this ensures we keep looping over the nodes in the parsed document
            svg.appendChild(svg.ownerDocument.importNode(node, true));
            node = node.nextSibling;
        }
        var attributes = getAttributes({
            width: 24,
            height: 24,
            viewBox: "0 0 32 32",
            title: this.title,
            "aria-label": this.ariaLabel,
            "aria-labelledby": this.ariaLabelledby,
            "aria-hidden": this.ariaHidden,
            focusable: this.isFocusable.toString()
        });
        var attrKeys = Object.keys(attributes);
        for (var i = 0; i < attrKeys.length; i++) {
            var key = attrKeys[i];
            var value = attributes[key];
            if (key === "title") {
                continue;
            }
            if (value) {
                svg.setAttribute(key, value);
            }
        }
        if (attributes.title) {
            var title = document.createElement("title");
            title.textContent = attributes.title;
            Migrate24Directive.titleIdCounter++;
            title.setAttribute("id", "migrate24-" + Migrate24Directive.titleIdCounter);
            svg.appendChild(title);
            svg.setAttribute("aria-labelledby", "migrate24-" + Migrate24Directive.titleIdCounter);
        }
    };
    Migrate24Directive.titleIdCounter = 0;
    Migrate24Directive.decorators = [
        { type: Directive, args: [{
                    selector: "[ibmIconMigrate24]"
                },] },
    ];
    /** @nocollapse */
    Migrate24Directive.ctorParameters = function () { return [
        { type: ElementRef }
    ]; };
    Migrate24Directive.propDecorators = {
        ariaLabel: [{ type: Input }],
        ariaLabelledby: [{ type: Input }],
        ariaHidden: [{ type: Input }],
        title: [{ type: Input }],
        isFocusable: [{ type: Input }]
    };
    return Migrate24Directive;
}());
export { Migrate24Directive };
var Migrate24Module = /** @class */ (function () {
    function Migrate24Module() {
    }
    Migrate24Module.decorators = [
        { type: NgModule, args: [{
                    declarations: [
                        Migrate24,
                        Migrate24Directive
                    ],
                    exports: [
                        Migrate24,
                        Migrate24Directive
                    ]
                },] },
    ];
    return Migrate24Module;
}());
export { Migrate24Module };
//# sourceMappingURL=24.js.map
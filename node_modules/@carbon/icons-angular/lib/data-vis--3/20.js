import { NgModule, Component, Directive, ElementRef, Input } from "@angular/core";
import { getAttributes } from "@carbon/icon-helpers";
var DataVis_320 = /** @class */ (function () {
    function DataVis_320() {
        this.focusable = false;
    }
    DataVis_320.decorators = [
        { type: Component, args: [{
                    selector: "ibm-icon-data-vis-320",
                    template: "\n    <svg\n      ibmIconDataVis_320\n      [ariaLabel]=\"ariaLabel\"\n      [ariaLabelledby]=\"ariaLabelledby\"\n      [ariaHidden]=\"ariaHidden\"\n      [title]=\"title\"\n      [isFocusable]=\"focusable\"\n      [attr.class]=\"innerClass\">\n    </svg>\n  "
                },] },
    ];
    DataVis_320.propDecorators = {
        ariaLabel: [{ type: Input }],
        ariaLabelledby: [{ type: Input }],
        ariaHidden: [{ type: Input }],
        title: [{ type: Input }],
        focusable: [{ type: Input }],
        innerClass: [{ type: Input }]
    };
    return DataVis_320;
}());
export { DataVis_320 };
var DataVis_320Directive = /** @class */ (function () {
    function DataVis_320Directive(elementRef) {
        this.elementRef = elementRef;
        this.isFocusable = false;
    }
    DataVis_320Directive.prototype.ngAfterViewInit = function () {
        var svg = this.elementRef.nativeElement;
        svg.setAttribute("xmlns", "http://www.w3.org/2000/svg");
        var domParser = new DOMParser();
        var rawSVG = "<svg focusable=\"false\" preserveAspectRatio=\"xMidYMid meet\" style=\"will-change: transform;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 32 32\" aria-hidden=\"true\"><path d=\"M28 3a2.991 2.991 0 0 0-2.816 2h-3.326a3.98 3.98 0 0 0-7.716 0H9.858A3.992 3.992 0 1 0 5 9.858v4.284a3.98 3.98 0 0 0 0 7.716v3.326a3 3 0 1 0 2 0v-3.326a3.978 3.978 0 0 0 1.673-.903l3.364 1.682A2.963 2.963 0 0 0 12 23a3.012 3.012 0 1 0 .922-2.157l-3.148-1.574A3.95 3.95 0 0 0 10 18a3.996 3.996 0 0 0-3-3.858V9.858A3.995 3.995 0 0 0 9.858 7h4.284a3.937 3.937 0 0 0 4.782 2.882l1.811 3.17a3.045 3.045 0 1 0 1.733-.998L20.689 8.94A3.984 3.984 0 0 0 21.858 7h3.326A2.995 2.995 0 1 0 28 3zM8 18a2 2 0 1 1-2-2 2.002 2.002 0 0 1 2 2zM6 8a2 2 0 1 1 2-2 2.002 2.002 0 0 1-2 2zm10-2a2 2 0 1 1 2 2 2.002 2.002 0 0 1-2-2z\"></path></svg>";
        var svgElement = domParser.parseFromString(rawSVG, "image/svg+xml").documentElement;
        var node = svgElement.firstChild;
        while (node) {
            // importNode makes a clone of the node
            // this ensures we keep looping over the nodes in the parsed document
            svg.appendChild(svg.ownerDocument.importNode(node, true));
            node = node.nextSibling;
        }
        var attributes = getAttributes({
            width: 20,
            height: 20,
            viewBox: "0 0 32 32",
            title: this.title,
            "aria-label": this.ariaLabel,
            "aria-labelledby": this.ariaLabelledby,
            "aria-hidden": this.ariaHidden,
            focusable: this.isFocusable.toString()
        });
        var attrKeys = Object.keys(attributes);
        for (var i = 0; i < attrKeys.length; i++) {
            var key = attrKeys[i];
            var value = attributes[key];
            if (key === "title") {
                continue;
            }
            if (value) {
                svg.setAttribute(key, value);
            }
        }
        if (attributes.title) {
            var title = document.createElement("title");
            title.textContent = attributes.title;
            DataVis_320Directive.titleIdCounter++;
            title.setAttribute("id", "data-vis-320-" + DataVis_320Directive.titleIdCounter);
            svg.appendChild(title);
            svg.setAttribute("aria-labelledby", "data-vis-320-" + DataVis_320Directive.titleIdCounter);
        }
    };
    DataVis_320Directive.titleIdCounter = 0;
    DataVis_320Directive.decorators = [
        { type: Directive, args: [{
                    selector: "[ibmIconDataVis_320]"
                },] },
    ];
    /** @nocollapse */
    DataVis_320Directive.ctorParameters = function () { return [
        { type: ElementRef }
    ]; };
    DataVis_320Directive.propDecorators = {
        ariaLabel: [{ type: Input }],
        ariaLabelledby: [{ type: Input }],
        ariaHidden: [{ type: Input }],
        title: [{ type: Input }],
        isFocusable: [{ type: Input }]
    };
    return DataVis_320Directive;
}());
export { DataVis_320Directive };
var DataVis_320Module = /** @class */ (function () {
    function DataVis_320Module() {
    }
    DataVis_320Module.decorators = [
        { type: NgModule, args: [{
                    declarations: [
                        DataVis_320,
                        DataVis_320Directive
                    ],
                    exports: [
                        DataVis_320,
                        DataVis_320Directive
                    ]
                },] },
    ];
    return DataVis_320Module;
}());
export { DataVis_320Module };
//# sourceMappingURL=20.js.map
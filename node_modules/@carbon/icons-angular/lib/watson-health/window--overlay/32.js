import { NgModule, Component, Directive, ElementRef, Input } from "@angular/core";
import { getAttributes } from "@carbon/icon-helpers";
var WatsonHealthWindowOverlay32 = /** @class */ (function () {
    function WatsonHealthWindowOverlay32() {
        this.focusable = false;
    }
    WatsonHealthWindowOverlay32.decorators = [
        { type: Component, args: [{
                    selector: "ibm-icon-watson-health-window-overlay32",
                    template: "\n    <svg\n      ibmIconWatsonHealthWindowOverlay32\n      [ariaLabel]=\"ariaLabel\"\n      [ariaLabelledby]=\"ariaLabelledby\"\n      [ariaHidden]=\"ariaHidden\"\n      [title]=\"title\"\n      [isFocusable]=\"focusable\"\n      [attr.class]=\"innerClass\">\n    </svg>\n  "
                },] },
    ];
    WatsonHealthWindowOverlay32.propDecorators = {
        ariaLabel: [{ type: Input }],
        ariaLabelledby: [{ type: Input }],
        ariaHidden: [{ type: Input }],
        title: [{ type: Input }],
        focusable: [{ type: Input }],
        innerClass: [{ type: Input }]
    };
    return WatsonHealthWindowOverlay32;
}());
export { WatsonHealthWindowOverlay32 };
var WatsonHealthWindowOverlay32Directive = /** @class */ (function () {
    function WatsonHealthWindowOverlay32Directive(elementRef) {
        this.elementRef = elementRef;
        this.isFocusable = false;
    }
    WatsonHealthWindowOverlay32Directive.prototype.ngAfterViewInit = function () {
        var svg = this.elementRef.nativeElement;
        svg.setAttribute("xmlns", "http://www.w3.org/2000/svg");
        var domParser = new DOMParser();
        var rawSVG = "<svg focusable=\"false\" preserveAspectRatio=\"xMidYMid meet\" style=\"will-change: transform;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"32\" height=\"32\" viewBox=\"0 0 32 32\" aria-hidden=\"true\"><path d=\"M15 6h2v3h-2zm10 11h3v2h-3zM15 27h2v3h-2zM4 17h3v2H4zm2.774-6.814l1.414-1.414 2.122 2.122-1.415 1.414zm14.92.712l2.121-2.122 1.415 1.415-2.122 2.121zm-.004 14.189l1.414-1.415 2.121 2.122-1.414 1.414zm-14.913.723l2.12-2.121 1.415 1.414-2.121 2.121zM4 2h24v2H4zm12 22a6 6 0 1 0-6-6 6 6 0 0 0 6 6zm0-10v8a4 4 0 0 1 0-8z\"></path></svg>";
        var svgElement = domParser.parseFromString(rawSVG, "image/svg+xml").documentElement;
        var node = svgElement.firstChild;
        while (node) {
            // importNode makes a clone of the node
            // this ensures we keep looping over the nodes in the parsed document
            svg.appendChild(svg.ownerDocument.importNode(node, true));
            node = node.nextSibling;
        }
        var attributes = getAttributes({
            width: 32,
            height: 32,
            viewBox: "0 0 32 32",
            title: this.title,
            "aria-label": this.ariaLabel,
            "aria-labelledby": this.ariaLabelledby,
            "aria-hidden": this.ariaHidden,
            focusable: this.isFocusable.toString()
        });
        var attrKeys = Object.keys(attributes);
        for (var i = 0; i < attrKeys.length; i++) {
            var key = attrKeys[i];
            var value = attributes[key];
            if (key === "title") {
                continue;
            }
            if (value) {
                svg.setAttribute(key, value);
            }
        }
        if (attributes.title) {
            var title = document.createElement("title");
            title.textContent = attributes.title;
            WatsonHealthWindowOverlay32Directive.titleIdCounter++;
            title.setAttribute("id", "watson-health-window-overlay32-" + WatsonHealthWindowOverlay32Directive.titleIdCounter);
            svg.appendChild(title);
            svg.setAttribute("aria-labelledby", "watson-health-window-overlay32-" + WatsonHealthWindowOverlay32Directive.titleIdCounter);
        }
    };
    WatsonHealthWindowOverlay32Directive.titleIdCounter = 0;
    WatsonHealthWindowOverlay32Directive.decorators = [
        { type: Directive, args: [{
                    selector: "[ibmIconWatsonHealthWindowOverlay32]"
                },] },
    ];
    /** @nocollapse */
    WatsonHealthWindowOverlay32Directive.ctorParameters = function () { return [
        { type: ElementRef }
    ]; };
    WatsonHealthWindowOverlay32Directive.propDecorators = {
        ariaLabel: [{ type: Input }],
        ariaLabelledby: [{ type: Input }],
        ariaHidden: [{ type: Input }],
        title: [{ type: Input }],
        isFocusable: [{ type: Input }]
    };
    return WatsonHealthWindowOverlay32Directive;
}());
export { WatsonHealthWindowOverlay32Directive };
var WatsonHealthWindowOverlay32Module = /** @class */ (function () {
    function WatsonHealthWindowOverlay32Module() {
    }
    WatsonHealthWindowOverlay32Module.decorators = [
        { type: NgModule, args: [{
                    declarations: [
                        WatsonHealthWindowOverlay32,
                        WatsonHealthWindowOverlay32Directive
                    ],
                    exports: [
                        WatsonHealthWindowOverlay32,
                        WatsonHealthWindowOverlay32Directive
                    ]
                },] },
    ];
    return WatsonHealthWindowOverlay32Module;
}());
export { WatsonHealthWindowOverlay32Module };
//# sourceMappingURL=32.js.map
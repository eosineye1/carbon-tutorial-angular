(function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/core'), require('@carbon/icon-helpers')) :
    typeof define === 'function' && define.amd ? define(['exports', '@angular/core', '@carbon/icon-helpers'], factory) :
    (factory((global.CarbonIconsAngular = {}),global.ng.Core,global.CarbonIconHelpers));
}(this, (function (exports,core,iconHelpers) { 'use strict';

    var Bee20 = /** @class */ (function () {
        function Bee20() {
            this.focusable = false;
        }
        Bee20.decorators = [
            { type: core.Component, args: [{
                        selector: "ibm-icon-bee20",
                        template: "\n    <svg\n      ibmIconBee20\n      [ariaLabel]=\"ariaLabel\"\n      [ariaLabelledby]=\"ariaLabelledby\"\n      [ariaHidden]=\"ariaHidden\"\n      [title]=\"title\"\n      [isFocusable]=\"focusable\"\n      [attr.class]=\"innerClass\">\n    </svg>\n  "
                    },] },
        ];
        Bee20.propDecorators = {
            ariaLabel: [{ type: core.Input }],
            ariaLabelledby: [{ type: core.Input }],
            ariaHidden: [{ type: core.Input }],
            title: [{ type: core.Input }],
            focusable: [{ type: core.Input }],
            innerClass: [{ type: core.Input }]
        };
        return Bee20;
    }());
    var Bee20Directive = /** @class */ (function () {
        function Bee20Directive(elementRef) {
            this.elementRef = elementRef;
            this.isFocusable = false;
        }
        Bee20Directive.prototype.ngAfterViewInit = function () {
            var svg = this.elementRef.nativeElement;
            svg.setAttribute("xmlns", "http://www.w3.org/2000/svg");
            var domParser = new DOMParser();
            var rawSVG = "<svg focusable=\"false\" preserveAspectRatio=\"xMidYMid meet\" style=\"will-change: transform;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 32 32\" aria-hidden=\"true\"><path d=\"M16 10a6 6 0 0 0-6 6v8a6 6 0 0 0 12 0v-8a6 6 0 0 0-6-6zm-4.25 7.87h8.5v4.25h-8.5zM16 28.25A4.27 4.27 0 0 1 11.75 24v-.13h8.5V24A4.27 4.27 0 0 1 16 28.25zm4.25-12.13h-8.5V16a4.25 4.25 0 0 1 8.5 0zm10.41 3.09L24 13v9.1a4 4 0 0 0 8 0 3.83 3.83 0 0 0-1.34-2.89zM28 24.35a2.25 2.25 0 0 1-2.25-2.25V17l3.72 3.47A2.05 2.05 0 0 1 30.2 22a2.25 2.25 0 0 1-2.2 2.35zM0 22.1a4 4 0 0 0 8 0V13l-6.66 6.21A3.88 3.88 0 0 0 0 22.1zm2.48-1.56L6.25 17v5.1a2.25 2.25 0 0 1-4.5 0 2.05 2.05 0 0 1 .73-1.56zM15 5.5A3.5 3.5 0 1 0 11.5 9 3.5 3.5 0 0 0 15 5.5zm-5.25 0a1.75 1.75 0 1 1 1.75 1.75A1.77 1.77 0 0 1 9.75 5.5zM20.5 2A3.5 3.5 0 1 0 24 5.5 3.5 3.5 0 0 0 20.5 2zm0 5.25a1.75 1.75 0 1 1 1.75-1.75 1.77 1.77 0 0 1-1.75 1.75z\"></path></svg>";
            var svgElement = domParser.parseFromString(rawSVG, "image/svg+xml").documentElement;
            var node = svgElement.firstChild;
            while (node) {
                // importNode makes a clone of the node
                // this ensures we keep looping over the nodes in the parsed document
                svg.appendChild(svg.ownerDocument.importNode(node, true));
                node = node.nextSibling;
            }
            var attributes = iconHelpers.getAttributes({
                width: 20,
                height: 20,
                viewBox: "0 0 32 32",
                title: this.title,
                "aria-label": this.ariaLabel,
                "aria-labelledby": this.ariaLabelledby,
                "aria-hidden": this.ariaHidden,
                focusable: this.isFocusable.toString()
            });
            var attrKeys = Object.keys(attributes);
            for (var i = 0; i < attrKeys.length; i++) {
                var key = attrKeys[i];
                var value = attributes[key];
                if (key === "title") {
                    continue;
                }
                if (value) {
                    svg.setAttribute(key, value);
                }
            }
            if (attributes.title) {
                var title = document.createElement("title");
                title.textContent = attributes.title;
                Bee20Directive.titleIdCounter++;
                title.setAttribute("id", "bee20-" + Bee20Directive.titleIdCounter);
                svg.appendChild(title);
                svg.setAttribute("aria-labelledby", "bee20-" + Bee20Directive.titleIdCounter);
            }
        };
        Bee20Directive.titleIdCounter = 0;
        Bee20Directive.decorators = [
            { type: core.Directive, args: [{
                        selector: "[ibmIconBee20]"
                    },] },
        ];
        /** @nocollapse */
        Bee20Directive.ctorParameters = function () { return [
            { type: core.ElementRef }
        ]; };
        Bee20Directive.propDecorators = {
            ariaLabel: [{ type: core.Input }],
            ariaLabelledby: [{ type: core.Input }],
            ariaHidden: [{ type: core.Input }],
            title: [{ type: core.Input }],
            isFocusable: [{ type: core.Input }]
        };
        return Bee20Directive;
    }());
    var Bee20Module = /** @class */ (function () {
        function Bee20Module() {
        }
        Bee20Module.decorators = [
            { type: core.NgModule, args: [{
                        declarations: [
                            Bee20,
                            Bee20Directive
                        ],
                        exports: [
                            Bee20,
                            Bee20Directive
                        ]
                    },] },
        ];
        return Bee20Module;
    }());

    exports.Bee20 = Bee20;
    exports.Bee20Directive = Bee20Directive;
    exports.Bee20Module = Bee20Module;

    Object.defineProperty(exports, '__esModule', { value: true });

})));
